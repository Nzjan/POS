name: RMS
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.3
  flutter: ^3.0.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  fluent_ui: ^4.9.2
  responsive_grid: ^2.1.0
  window_manager: ^0.4.3
  window_to_front: ^0.0.3
  iconsax: ^0.0.8
  flutter_svg: ^1.0.0
  font_awesome_flutter: ^10.0.0
  intl: ^0.19.0  # Add this line to use DateFormat
  responsive_builder: ^0.7.1
  syncfusion_flutter_charts: ^28.1.37
  fl_chart: ^0.69.2
  flutter_riverpod: ^2.6.1
  riverpod_annotation: ^2.6.1
  http: ^1.2.2
  json_annotation: ^4.8.0
  web_socket_channel: ^2.1.0
  flutter_secure_storage: ^5.0.2
  dio: ^5.0.0
  flutter_screenutil: ^5.9.3
  dropdown_button2: ^2.3.9
  shared_preferences: ^2.3.5





  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  #cupertino_icons: ^1.0.8

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0
  path_provider: ^2.0.15
  build_runner: ^2.3.3
  custom_lint:
  riverpod_generator: ^2.6.3
  riverpod_lint: ^2.6.3
  json_serializable: ^6.8.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/categorycard/
    - assets/images/veg_nonveg/
    - assets/images/recipe/burger/
    - assets/images/recipe/pizza/
    - assets/images/recipe/wine/
    - assets/images/recipe/juice/
    - assets/images/recipe/coffee/
    - assets/images/recipe/dessert/
    - assets/images/recipe/platter/
    - assets/images/recipe/rammen/
    - assets/images/recipe/soup/
    - assets/images/recipe/special/
    - assets/images/dashboard_icons/
    - assets/category_json/
    - assets/
    - assets/images/


  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
     - family: Courier Prime
       fonts:
         - asset: assets/fonts/CourierPrime-Regular.ttf
         - asset: assets/fonts/CourierPrime-Bold.ttf
         - asset: assets/fonts/Lato-Bold.ttf
         - asset: assets/fonts/Lato-Regular.ttf
         - asset: assets/fonts/Lato-light.ttf
         - asset: assets/fonts/Lato-Thin.ttf

  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
